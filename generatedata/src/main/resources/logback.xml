<?xml version="1.0" encoding="UTF-8" ?> 
<!DOCTYPE configuration>

<configuration>
	<property name="APP_Name" value="generatedata" />
	<contextName>${APP_Name}</contextName>
	<!-- 配置文件路径 -->
	<property name="Path" value="${user.dir}/logs/" />
	<timestamp key="timestamp" datePattern="yyyy-MM-dd HH:mm:ss.SSS" />
	
	<!-- 控制台输出日志 -->
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<layout class="ch.qos.logback.classic.PatternLayout">
			<!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度 %msg：日志消息，%n是换行符-->
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} -%msg%n</pattern>
		</layout>
	</appender>

	<!-- 文件输出日志 (文件大小策略进行文件输出，超过指定大小对文件压缩(.zip)备份) -->
	<appender name="FILE" class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>	<!-- 指定要对级别为ERROR日志信息过滤 -->
			<OnMismatch>ACCEPT</OnMismatch>	<!-- 如果匹配，则立即处理 -->
			<OnMatch>DENY</OnMatch>	<!-- 如果不匹配，下个过滤器处理 -->
		</filter>

		<!-- 文件的路径及文件名 -->
		<File>${Path}${APP_Name}.log</File>
		<!-- 定义窗口滚动策略 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<!-- 每触发一次，自动压缩日志文件，%i在1-3之间循环变化 -->
			<FileNamePattern>${Path}${APP_Name}_%i.log.zip</FileNamePattern>
			<MinIndex>1</MinIndex> <!-- %i的最小值为1 -->
			<MaxIndex>3</MaxIndex> <!-- %i的最大值为3 -->
		</rollingPolicy>
		<!-- 触发策略，通常rollingPolicy与triggeringPolicy联合使用 -->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>200MB</MaxFileSize>
		</triggeringPolicy>
		<!-- 格式化输出 -->
		<!-- 或者用下面的形式格式(推荐) -->
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} -%msg%n</pattern>
		</encoder>
	</appender>
	<!-- 输出ERROR级别的日志到文件(同样采用文件大小策略进行文件输出，超过指定大小对文件压缩(.zip)备份) -->
	<appender name="FILE-ERROR"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level> <!-- 指定要对级别为ERROR日志信息过滤 -->
			<OnMismatch>DENY</OnMismatch>     <!-- 如果不匹配，下个过滤器处理 -->
			<OnMatch>ACCEPT</OnMatch>         <!-- 如果匹配，则立即处理 -->
		</filter>

		<File>${Path}${APP_Name}_error.log</File> <!-- 文件名即路径 -->
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<FileNamePattern>${Path}${APP_Name}_error_%i.log.zip</FileNamePattern>
			<MinIndex>1</MinIndex>
			<MaxIndex>3</MaxIndex>
		</rollingPolicy>

		<triggeringPolicy class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>1024KB</MaxFileSize>
		</triggeringPolicy>
		<!-- 格式化输出 -->
		<encoder>
			<pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} -%msg%n</pattern>
		</encoder>
	</appender>
	<!-- 分别将STDOUT与FILE appender都添加到自定义的logger中，否则将不会输出到appender指定的 目的地 -->

	<root level="debug">    <!-- root logger，定义级别为debug -->
		<appender-ref ref="STDOUT" />    <!--将名为STDOUT的appender添加到root logger下 -->
		<appender-ref ref="FILE-ERROR" />
		<appender-ref ref="FILE" />
	</root>

</configuration> 